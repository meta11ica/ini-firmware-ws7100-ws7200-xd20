import zlib
import os
import tkinter as tk
from tkinter import filedialog
from tkinter import messagebox

# Function to calculate CRC-32
def calculate_crc(content):
    return zlib.crc32(content)

# Function to read the file and get its size and CRC-32 checksum
def process_firmware_file(file_path):
    with open(file_path, 'rb') as f:
        file_content = f.read()
        file_size = os.path.getsize(file_path)
        file_crc = calculate_crc(file_content)
    return file_size, file_crc

# Function to create the .ini file content
def generate_ini_content(filename, filesize, firmware_crc):
    content = f"""
# autogenerated by tools
# do NOT modify this file
IMAGE_NAME={filename}
IMAGE_SIZE={filesize}
PACKAGE_ID=fnt-HGW
PRODUCT_ID=fnt-HGW
FIRMWARE_VERSION=0
PCB_VERSION=0
FIRMWARE_CRC_SUM={firmware_crc}
PARTITIONS=CFE,0x00000000-0x0000FFFF,uncover|kernelfs,0x00010000-0x003FFFFF,cover
INI_CRC_SUM=""".strip()

    ini_crc_sum = calculate_crc(content.encode())
    content = content.replace("INI_CRC_SUM=", f"INI_CRC_SUM={ini_crc_sum}")

    return content

# Function to handle file selection and processing
def process_file():
    # Open file dialog to select firmware file
    firmware_file = filedialog.askopenfilename(
        title="Select Firmware File",
        filetypes=[("All Files", "*.*")]
    )
    
    if not firmware_file:
        return
    
    try:
        # Get the file name without the extension
        filename = os.path.basename(firmware_file)
        base_name = os.path.splitext(filename)[0]
    
        # Process the firmware file to get the size and CRC-32
        filesize, firmware_crc = process_firmware_file(firmware_file)
    
        # Generate the content of the .ini file
        ini_content = generate_ini_content(filename, filesize, firmware_crc)
    
        # Define the .ini file path (in the same folder as the selected file)
        ini_filename = os.path.join(os.path.dirname(firmware_file), f"{base_name}.ini")
    
        # Save the content to the .ini file
        with open(ini_filename, 'w', newline='\n') as ini_file:
            ini_file.write(ini_content)
    
        # Show success message
        messagebox.showinfo("Success", f"INI file created: {ini_filename}")
    except Exception as e:
        # Show error message
        messagebox.showerror("Error", f"An error occurred: {e}")

# Create the main window
root = tk.Tk()
root.title("Firmware INI Generator")

# Create a button to process files
button = tk.Button(root, text="Select Firmware File", command=process_file)
button.pack(padx=20, pady=20)

# Run the GUI event loop
root.mainloop()
